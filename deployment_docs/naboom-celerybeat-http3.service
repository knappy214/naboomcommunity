[Unit]
Description=Naboom Community Celery Beat Scheduler (HTTP/3 Task Scheduling Optimized)
After=network.target redis-server.service postgresql.service naboom-celery.service
Wants=network.target
Requires=redis-server.service postgresql.service

[Service]
Type=simple
User=www-data
Group=www-data
WorkingDirectory=/opt/naboomcommunity
EnvironmentFile=/opt/naboomcommunity/.env

# Python 3.12.3 optimizations for HTTP/3 task scheduling
Environment=PYTHONPATH=/opt/naboomcommunity
Environment=PYTHONUNBUFFERED=1
Environment=PYTHONDONTWRITEBYTECODE=1
Environment=PYTHONHASHSEED=random
Environment=PYTHONOPTIMIZE=1

# Django 5.2 + HTTP/3 scheduler integration
Environment=DJANGO_SETTINGS_MODULE=naboomcommunity.settings.production
Environment=HTTP3_SCHEDULER_ENABLED=true

# Celery 5.5.3 beat scheduler with HTTP/3 task distribution
ExecStart=/opt/naboomcommunity/venv/bin/celery -A naboomcommunity beat \
    --loglevel=info \
    --scheduler django_celery_beat.schedulers:DatabaseScheduler \
    --max-interval=180 \
    --pidfile=/var/run/celery/celerybeat-http3.pid \
    --logfile=/var/log/naboom/celery/beat-http3.log \
    --detach=no

# HTTP/3 optimized scheduling features
Environment=CELERY_BEAT_SCHEDULE_FILENAME=/var/lib/celery/celerybeat-schedule-http3
Environment=CELERY_BEAT_MAX_LOOP_INTERVAL=180
Environment=CELERY_BEAT_SYNC_EVERY=0

# HTTP/3 task scheduling optimization
Environment=DJANGO_CELERY_BEAT_TZ_AWARE=true
Environment=CELERY_TIMEZONE=Africa/Johannesburg
Environment=HTTP3_TASK_PRIORITY_SCHEDULING=enabled

# HTTP/3 specific scheduled tasks configuration
Environment=CELERY_BEAT_SCHEDULE={
    'http3-connection-cleanup': {
        'task': 'core.tasks.http3_connection_cleanup',
        'schedule': 300.0,
        'options': {'queue': 'background'}
    },
    'http3-performance-analytics': {
        'task': 'core.tasks.http3_performance_metrics',
        'schedule': 600.0,
        'options': {'queue': 'background'}
    },
    'emergency-system-heartbeat': {
        'task': 'panic.tasks.emergency_system_heartbeat',
        'schedule': 60.0,
        'options': {'queue': 'http3_priority'}
    },
    'websocket-connection-monitoring': {
        'task': 'core.tasks.websocket_http3_monitoring',
        'schedule': 120.0,
        'options': {'queue': 'background'}
    },
    'real-time-cache-optimization': {
        'task': 'core.tasks.http3_cache_optimization',
        'schedule': 1800.0,
        'options': {'queue': 'background'}
    },
    'mobile-connection-analysis': {
        'task': 'core.tasks.mobile_http3_analysis',
        'schedule': 3600.0,
        'options': {'queue': 'background'}
    }
}

# Enhanced scheduling reliability for HTTP/3 workload
Environment=CELERY_BEAT_SCHEDULE_FILENAME_BACKUP=/var/lib/celery/celerybeat-schedule-http3.bak
Environment=CELERY_BEAT_PERSISTENT=true

# Process management optimized for HTTP/3 scheduling
Restart=always
RestartSec=25
StartLimitInterval=600
StartLimitBurst=3
KillMode=mixed
KillSignal=SIGTERM
TimeoutStartSec=180
TimeoutStopSec=90

# Resource limits for HTTP/3 scheduler
LimitNOFILE=32768
LimitNPROC=4096
LimitMEMLOCK=64MB

# Memory management for Python 3.12.3 scheduler
Environment=MALLOC_TRIM_THRESHOLD_=131072

# Security hardening for HTTP/3 scheduler
NoNewPrivileges=true
PrivateTmp=true
ProtectSystem=strict
ProtectHome=true
ReadWritePaths=/opt/naboomcommunity /var/log/naboom /var/run/celery /var/lib/celery

# Create required directories for HTTP/3 scheduler
RuntimeDirectory=celery
RuntimeDirectoryMode=0755
StateDirectory=celery
StateDirectoryMode=0755

# Logging optimized for HTTP/3 task scheduling analysis
StandardOutput=journal
StandardError=journal
SyslogIdentifier=naboom-celerybeat-http3

# Graceful shutdown with HTTP/3 task completion
ExecStop=/bin/bash -c '/opt/naboomcommunity/venv/bin/celery -A naboomcommunity control shutdown || kill -TERM $MAINPID'
ExecReload=/bin/kill -HUP $MAINPID

# HTTP/3 scheduler health verification
ExecStartPost=/bin/sleep 15
ExecStartPost=/bin/bash -c 'timeout 45 /opt/naboomcommunity/venv/bin/celery -A naboomcommunity inspect scheduled >/dev/null 2>&1 && echo "Celery Beat HTTP/3 scheduler started successfully" | systemd-cat -t naboom-celerybeat || echo "Celery Beat HTTP/3 scheduler verification failed" | systemd-cat -t naboom-celerybeat'

# Ensure beat doesn't start before HTTP/3 worker is ready
ExecStartPre=/bin/bash -c 'until systemctl is-active --quiet naboom-celery; do sleep 3; done'
ExecStartPre=/bin/bash -c 'timeout 60 /opt/naboomcommunity/venv/bin/celery -A naboomcommunity inspect ping >/dev/null 2>&1 || (echo "HTTP/3 Celery worker not ready for beat scheduler" | systemd-cat -t naboom-celerybeat; exit 1)'

# HTTP/3 task scheduling monitoring
ExecStartPost=/bin/bash -c 'sleep 10; /opt/naboomcommunity/venv/bin/celery -A naboomcommunity inspect scheduled | head -30 | systemd-cat -t naboom-celerybeat-schedule'

# Schedule validation for HTTP/3 tasks
ExecStartPost=/bin/bash -c 'sleep 5; echo "HTTP/3 scheduled tasks:" && /opt/naboomcommunity/venv/bin/python -c "
from django.core.management import execute_from_command_line
import os
os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"naboomcommunity.settings.production\")
execute_from_command_line([\"manage.py\", \"shell\", \"-c\", \"
from django_celery_beat.models import PeriodicTask
tasks = PeriodicTask.objects.filter(enabled=True)
for task in tasks:
    print(f\"Task: {task.name}, Interval: {task.interval}, Queue: {task.queue or \'default\'}\")
\"])
" | systemd-cat -t naboom-celerybeat-tasks 2>/dev/null || true'

# Automated schedule backup for HTTP/3 reliability
ExecStartPost=/bin/bash -c 'echo "0 2 * * * cp /var/lib/celery/celerybeat-schedule-http3 /var/lib/celery/celerybeat-schedule-http3.backup-$(date +\%Y\%m\%d) 2>/dev/null" | crontab -u www-data - 2>/dev/null || true'

# HTTP/3 performance monitoring integration
ExecStartPost=/bin/bash -c 'echo "*/15 * * * * /opt/naboomcommunity/venv/bin/celery -A naboomcommunity inspect scheduled | wc -l > /var/log/naboom/celery/scheduled-tasks-count.log 2>/dev/null" | crontab -u www-data - 2>/dev/null || true'

[Install]
WantedBy=multi-user.target