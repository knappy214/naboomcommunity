# ============================================================================
# ENHANCED PROXY CONFIGURATION SNIPPET (Updated for Modern Stack)
# ============================================================================
# File: /etc/nginx/snippets/proxy-common.conf
# 
# Updated for:
#   - Nginx 1.24.0 HTTP/3 compatibility
#   - Python 3.12.3 application optimizations
#   - Django 5.2 async view support
#   - Enhanced security and monitoring
# 
# Usage in location blocks:
#   location /api/ {
#       proxy_pass http://upstream_name;
#       include /etc/nginx/snippets/proxy-common.conf;
#   }
# ============================================================================

# ============================================================================
# PROTOCOL AND CONNECTION SETTINGS
# ============================================================================

# Use HTTP/1.1 for upstream connections (better performance than HTTP/1.0)
proxy_http_version 1.1;

# Clear the Connection header to enable keep-alive with upstreams
proxy_set_header Connection "";

# ============================================================================
# STANDARD PROXY HEADERS (Enhanced for Modern Applications)
# ============================================================================

# Basic identification headers
proxy_set_header Host $host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;

# Enhanced headers for modern applications
proxy_set_header X-Forwarded-Host $host;
proxy_set_header X-Forwarded-Port $server_port;

# Request tracing (useful for debugging and monitoring)
proxy_set_header X-Request-ID $request_id;

# Client information for Django applications
proxy_set_header X-Original-URI $request_uri;
proxy_set_header X-Original-Method $request_method;

# HTTP/3 compatibility header
proxy_set_header X-Forwarded-Proto-Version $http_version;

# ============================================================================
# TIMEOUT SETTINGS (Optimized for Django 5.2 + Python 3.12.3)
# ============================================================================

# Connection timeouts (balanced for performance and reliability)
proxy_connect_timeout 30s;       # Increased for Python 3.12.3 startup time
proxy_send_timeout 120s;         # Extended for Django 5.2 async operations
proxy_read_timeout 120s;         # Extended for complex queries

# ============================================================================
# BUFFER SETTINGS (Optimized for Modern Traffic Patterns)
# ============================================================================

# Enable buffering for better performance (can be overridden per location)
proxy_buffering on;

# Buffer configuration optimized for typical Django responses
proxy_buffer_size 8k;           # Increased for larger headers
proxy_buffers 16 8k;           # More buffers for concurrent requests
proxy_busy_buffers_size 16k;   # Larger busy buffer size

# ============================================================================
# ADVANCED PROXY SETTINGS
# ============================================================================

# Don't modify redirect responses from upstream
proxy_redirect off;

# Enable keep-alive connections to upstream
proxy_socket_keepalive on;

# Request body handling
proxy_request_buffering on;

# ============================================================================
# SECURITY HEADERS (For Backend Communication)
# ============================================================================

# Remove server version information
proxy_hide_header Server;
proxy_hide_header X-Powered-By;

# ============================================================================
# PERFORMANCE OPTIMIZATIONS
# ============================================================================

# Enable TCP optimizations for proxy connections
proxy_socket_keepalive on;

# Disable proxy temporary files for better performance
proxy_max_temp_file_size 0;

# ============================================================================
# ERROR HANDLING
# ============================================================================

# Define upstream failure conditions
proxy_next_upstream error timeout http_502 http_503 http_504;
proxy_next_upstream_tries 2;
proxy_next_upstream_timeout 30s;

# ============================================================================
# COMPRESSION HANDLING
# ============================================================================

# Pass through compression headers
proxy_set_header Accept-Encoding $http_accept_encoding;

# ============================================================================
# DJANGO-SPECIFIC OPTIMIZATIONS
# ============================================================================

# Django CSRF and session handling
proxy_cookie_path / "/; Secure; HttpOnly; SameSite=Strict";

# Django internationalization support
proxy_set_header Accept-Language $http_accept_language;

# ============================================================================
# MONITORING AND DEBUGGING
# ============================================================================

# Add timing information for monitoring
proxy_set_header X-Request-Start $msec;

# ============================================================================
# CONDITIONAL SETTINGS (Can be overridden in specific locations)
# ============================================================================

# These can be overridden in specific location blocks:
# - proxy_buffering (disable for SSE/WebSocket)
# - proxy_cache (enable for cacheable content)
# - proxy_read_timeout (extend for long-running operations)
# - proxy_connect_timeout (reduce for health checks)

# ============================================================================
# USAGE EXAMPLES
# ============================================================================

# For SSE streams (override buffering):
#   location /stream {
#       proxy_pass http://upstream;
#       include /etc/nginx/snippets/proxy-common.conf;
#       proxy_buffering off;
#       proxy_cache off;
#   }

# For API with caching:
#   location /api/ {
#       proxy_pass http://upstream;
#       include /etc/nginx/snippets/proxy-common.conf;
#       proxy_cache api_cache;
#       proxy_cache_valid 200 5m;
#   }

# For health checks (fast timeouts):
#   location /health {
#       proxy_pass http://upstream;
#       include /etc/nginx/snippets/proxy-common.conf;
#       proxy_connect_timeout 1s;
#       proxy_read_timeout 1s;
#   }